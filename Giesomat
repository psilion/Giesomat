const int moistureGPIO = 35;
int GPIOOUT = 17;
int moistureValue = 0;

int vielGiessen = 3;
int mittelGiessen = 2;
int wenigGiessen = 1;
#define TIME_TO_SLEEP  3600        /* Time ESP32 will go to sleep (in seconds) */
#define uS_TO_S_FACTOR 1000000ULL  /* Conversion factor for micro seconds to seconds */
#include <esp_deep_sleep.h>
//OLED
#include <U8x8lib.h>  
U8X8_SSD1306_128X64_NONAME_SW_I2C u8x8(/* clock=*/ 15, /* data=*/ 4, /* reset=*/ 16);
String displayvalue;

void giessen(int seconds)
{
  digitalWrite(GPIOOUT, LOW);
  Serial.println("Gießen");
  delay(seconds*1000);
  digitalWrite(GPIOOUT, HIGH);
  Serial.println("Gießen beendet.");
}

void setup() {
  Serial.begin(115200);
  delay(1000);

  u8x8.begin();
  u8x8.setFont(u8x8_font_chroma48medium8_r);
  
  
  pinMode (GPIOOUT, OUTPUT);
  digitalWrite(GPIOOUT, HIGH);
  
 
  
 
  delay(1000);

 }

void loop() {
  u8x8.clearDisplay();
  moistureValue = analogRead(moistureGPIO);
  displayvalue = moistureValue;
  Serial.print("Feuchtigkeit: ");
  Serial.println(moistureValue);
  u8x8.println("");
    if (moistureValue > 2800){
      Serial.println("Sehr trocken, viel Gießen notwendig: ");
      Serial.println(moistureValue);
      u8x8.clearDisplay();
      u8x8.println("Sehr trocken, ");
      u8x8.println(displayvalue);
      giessen(vielGiessen);
      }else if (moistureValue <=2800 && moistureValue > 2300){
      Serial.print("Trocken, mäßig Gießen notwendig: ");
      Serial.println(moistureValue);
      u8x8.clearDisplay();
      u8x8.println("Trocken");
      u8x8.println(displayvalue);
      giessen(mittelGiessen);
      }else if (moistureValue <= 2300 && moistureValue > 2000){
      u8x8.clearDisplay();
      u8x8.println("Feucht");
      Serial.print("Feucht, sehr wenig Gießen notwendig: ");
      Serial.println(moistureValue);
      u8x8.println(displayvalue);
      giessen(wenigGiessen);
      }else {
      Serial.print("Sehr feucht, kein Gießen notwendig: ");
      Serial.println(moistureValue);
      u8x8.clearDisplay();
      u8x8.println("Sehr feucht");
      u8x8.println(displayvalue);
      }
  delay(60000);
  }
